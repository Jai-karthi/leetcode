class Solution:
    def numSubmatrixSumTarget(self, matrix: List[List[int]], target: int) -> int:
        rows, cols = len(matrix), len(matrix[0])
        # Compute prefix sum
        for r in range(rows):
            for c in range(1, cols):
                matrix[r][c] += matrix[r][c-1]

        count = 0
        # Iterate over all pairs of columns
        for col1 in range(cols):
            for col2 in range(col1, cols):
                sums = {0: 1}
                cur_sum = 0
                # Iterate over rows to find submatrices with target sum
                for row in range(rows):
                    cur_sum += matrix[row][col2] - (matrix[row][col1-1] if col1 > 0 else 0)
                    count += sums.get(cur_sum - target, 0)
                    sums[cur_sum] = sums.get(cur_sum, 0) + 1
        return count
