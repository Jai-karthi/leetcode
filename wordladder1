from collections import deque
grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]

def bfs(row,col,visited,grid,n,m):
    d = deque()
    d.append((row,col))
    visited[row][col] = 1
    while d:
        nr,nc = d.popleft()
        for rows in range(-1,2):
            for cols in range(-1,2):
                nrow = nr + rows
                ncol = nc + cols
                if nrow >= 0 and nrow < n and ncol >= 0 and ncol < m and  visited[nrow][ncol] == 0 and grid[nrow][ncol] == "1":
                    d.append((nrow,ncol))
                    visited[nrow][ncol] = 1
                
n = len(grid)
m = len(grid[0])
visited = [[ 0 for _ in range(m) ]for _ in range(n) ]
cnt = 0
for i in range(n):
    for j in range(m):
        if grid[i][j] == "1" and visited[i][j] ==  0:
            cnt += 1
            bfs(i,j,visited,grid,n,m)
print(cnt)
