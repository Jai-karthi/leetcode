# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthLargestLevelSum(self, root: Optional[TreeNode], k: int) -> int:

        nod = deque()
        
        nod.append(root)
        ans = []
        while nod :
            size = len(nod)
            lev = 0
            for _ in range(size):
                get = nod.popleft()
                lev += get.val
                if get.left:
                    nod.append(get.left)
                if get.right:
                    nod.append(get.right)
            heapq.heappush(ans,-lev)
        if len(ans)<k:
            return -1

        for _ in range(k-1):
            heapq.heappop(ans)

        return -heapq.heappop(ans)
