from collections import deque
grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
m = len(grid)
n = len(grid[0])
def bfs(grid,i,j,n,m):
    if i<0 or j<0 or i>=n or j>=n or grid[i][j] == "0":
            return
    grid[i][j] = '0'
    bfs(grid,i , j - 1,n,m)
    bfs(grid,i - 1,j,n,m)
    bfs(grid,i + 1, j,n,m)
    bfs(grid,i , j + 1,n,m)
cnt  =  0
for i in range(m):
    for j in range(n):
        if grid[i][j] == '1':
            cnt += 1
            bfs (grid,i,j,n,m)
print(cnt)
