# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def reverseOddLevels(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        def dfs(leftnode,rightnode,lvl):
            if leftnode is None or rightnode is None:
                return
            if lvl % 2 == 0:
                temp = leftnode.val
                leftnode.val= rightnode.val
                rightnode.val = temp

            dfs(leftnode.left,rightnode.right ,lvl + 1)
            dfs(leftnode.right ,rightnode.left ,lvl + 1)

        dfs(root.left,root.right,0)
        return root
