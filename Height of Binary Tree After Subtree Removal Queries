class Solution:
    def treeQueries(self, root: Optional[TreeNode], queries: List[int]) -> List[int]:
        self.max_height = [0]* 100001
        self.cur_maxheight = 0
        def lefttoright(node,height):
            if not node:return 
            
            self.max_height[node.val] = max(self.max_height[node.val],self.cur_maxheight)
            self.cur_maxheight = max(self.cur_maxheight,height) 
            lefttoright(node.left,height +1)
            lefttoright(node.right,height +1)

        def righttoleft(node,height):
            if not node:
                return 
            
            self.max_height[node.val] = max( self.max_height[node.val],self.cur_maxheight)
            self.cur_maxheight = max(self.cur_maxheight,height)
            righttoleft(node.right,height +1)
            righttoleft(node.left,height +1)
        lefttoright(root,0)
        self.cur_maxheight = 0
        righttoleft(root,0)
        return [self.max_height[q] for q in queries]
