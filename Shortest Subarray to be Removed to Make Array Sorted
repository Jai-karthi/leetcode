class Solution:
    def findLengthOfShortestSubarray(self, arr: List[int]) -> int:
        # left  = 0
        # while left < len(arr)-1 and arr[left] <= arr[left+1] :
        #     left += 1
        # if not left :
        #     return len(arr)-1
        # last = arr[:left][-1]
        # maxi = 0
        # for i in range(left,len(arr)):
        #     get = last
        #     for j in range(left+i,len(arr)):
        #         if get <= arr[j]:
        #             get = arr[j]
        #             maxi = max(j-(left+1),maxi)
                    
        # return maxi
        n = len(arr)
        left  =  0
        while  left +1 < n and arr[left] <= arr[left+1]:
            left += 1
        if left == n - 1:
            return 0
        right  =  n-1
        while  right > 0 and arr[right-1] <= arr[right]:
            right -= 1
        
        res = min(n-left-1,right)
        i, j = 0, right
        while i <= left and j < n:
            if arr[i] <= arr[j]:
                res = min(res, j - i - 1)
                i += 1
            else:
                j += 1
        
        return res
