"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    def postorder(self, root: 'Node') -> List[int]:
        res = []
        if not root: return res
        self._postorder(root,res)
        return res
    def _postorder(self,currentnode,postlist):
        if not currentnode: return
        for child in currentnode.children:
            self._postorder(child,postlist)
        postlist.append(currentnode.val)
