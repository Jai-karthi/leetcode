class Solution:
    def stoneGameII(self, piles: List[int]) -> int:
        cache  = {}
        def helper(alice,i,m):
            if i == len(piles):
                return 0
            if (alice,i,m) in cache :
                return cache[(alice,i,m)]
            total = 0
            res  = 0 if alice else float('inf')
            for x in range(1,2*m + 1):
                if x + i > len(piles) :
                    break
                total += piles[i + x -1]  
                if alice :
                    res = max(res,total + helper(not alice ,i + x, max(x,m)))
                else:
                    res  = min (res,helper(not alice,i + x ,max(x,m)))
                cache[(alice,i,m)] = res
            return res

        return helper(True,0,1)
